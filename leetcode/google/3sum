class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
  		vector<vector<int>> result;
  		sort(nums.begin(), nums.end());
  		int n = nums.size();
  		auto add_triplets = [&](int i) -> void {
  			int j = i + 1, k = n - 1;
  			while(j < k) {
  				int total = nums[i] + nums[j] + nums[k];
  				if (total < 0) {
  					j++;
  				} else if (total > 0) {
  					k--;
  				} else {
  					result.push_back({ nums[i], nums[j], nums[k] });
                    j++; k--;
  					while(j < n && nums[j] == nums[j - 1]) {
  						j++;
  					}
  				}
  			}
  		};
  		for(int i = 0; i < n; i++) {
  			if (i == 0 || nums[i] != nums[i - 1]) {
  				add_triplets(i);
  			}
  		}
  		return result;      
    }
};
