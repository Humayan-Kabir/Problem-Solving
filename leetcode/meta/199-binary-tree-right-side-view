/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
private:
	void getRightSideView(TreeNode* node, int depth, vector<int>& result) {
		if (!node) {
			return;
		}
		if (result.size() == depth) {
			result.push_back(node->val);
		}
		getRightSideView(node->right, depth + 1, result);
		getRightSideView(node->left, depth + 1, result);
	}
public:
    vector<int> rightSideView(TreeNode* root) {
  		vector<int> result;
  		getRightSideView(root, 0, result);
  		return result;      
    }
};
