/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> verticalOrder(TreeNode* root) {
        map<int, vector<int>> columnTable;
        queue<pair<TreeNode*, int>> q;
        q.push({root, 0});
        while(!q.empty()) {
            TreeNode* cur = q.front().first;
            int column = q.front().second;
            q.pop();
            columnTable[column].push_back(cur->val);
            if (cur->left) {
            	q.push({cur->left, column - 1});
            }
            if (cur->right) {
            	q.push({cur->right, column + 1});
            }
        }
        vector<vector<int>> result;
        for(auto it: columnTable) {
        	result.push_back(it.second);
        }
        return result;
    }
};
