/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
private: 
	int diameter;
	int get_max_path(TreeNode* root) {
		if (!root) {
			return 0;
  		}     
  		int left = get_max_path(root->left);
  		int right = get_max_path(root->right);
  		diameter = max(diameter, left + right);
  		return max(left, right) + 1;
	}
public:
    int diameterOfBinaryTree(TreeNode* root) {
        diameter = 0;
  		get_max_path(root);
  		return diameter;
    }
};
